import { ComponentPropsWithoutRef } from "react";
export declare type IconWeight = "thin" | "light" | "regular" | "bold" | "fill" | "duotone";
export declare type PaintFunction = (color: string) => React.ReactNode | null;
export interface IconProps extends ComponentPropsWithoutRef<"svg"> {
    color?: string;
    size?: string | number;
    weight?: IconWeight;
    mirrored?: boolean;
}
export declare type Icon = React.ForwardRefExoticComponent<IconProps & React.RefAttributes<SVGSVGElement>>;
export declare type IconContextProps = Required<Pick<IconProps, "color" | "size" | "weight" | "mirrored">> & ComponentPropsWithoutRef<"svg">;
export declare const IconContext: import("react").Context<IconContextProps>;
export declare const renderPathForWeight: (weight: IconWeight, color: string, pathsByWeight: Map<IconWeight, PaintFunction>) => React.ReactNode | null;
